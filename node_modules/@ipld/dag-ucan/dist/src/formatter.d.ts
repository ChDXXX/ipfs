export function format<C extends UCAN.Capability<UCAN.Ability, `${string}:${string}`>>(model: UCAN.Model<C>): UCAN.JWT<C>;
export function formatSignPayload<C extends UCAN.Capability<UCAN.Ability, `${string}:${string}`>>(model: UCAN.Data<C>): UCAN.SignPayload<C>;
export function formatHeader(data: UCAN.Data): UCAN.ToString<UCAN.ByteView<UCAN.Header>>;
export function formatPayload<C extends UCAN.Capability<UCAN.Ability, `${string}:${string}`>>(data: UCAN.Data<C>): UCAN.ToString<UCAN.ByteView<UCAN.Payload<C>>, string>;
export function formatSignature<C extends UCAN.Capability<UCAN.Ability, `${string}:${string}`>>(signature: UCAN.Signature<UCAN.SignPayload<C>, number>): UCAN.ToString<UCAN.Signature<C, number>, string>;
export function encodeHeader(data: UCAN.Data): UCAN.ByteView<UCAN.Header>;
export function encodePayload<C extends UCAN.Capability<UCAN.Ability, `${string}:${string}`>>(data: UCAN.Data<C>): UCAN.ByteView<UCAN.Payload<C>>;
export function encodeProof(proof: UCAN.Proof): string;
export function encodeAgorithm(data: {
    issuer: UCAN.ByteView<UCAN.DID>;
}): "EdDSA" | "RS256";
import * as UCAN from "./ucan.js";
import * as DID from "./did.js";
//# sourceMappingURL=formatter.d.ts.map