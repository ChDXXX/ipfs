export function decode<Protocol extends `${string}:`>(input: unknown, { protocol }?: {
    protocol?: Protocol | undefined;
} | undefined): API.Result<API.URI<Protocol>, API.Failure>;
export function match<Protocol extends `${string}:`>(options: {
    protocol: Protocol;
}): API.Decoder<unknown, API.URI<Protocol>, API.Failure>;
export function string<Schema extends string>(options?: {
    protocol?: `${Schema}:` | undefined;
} | undefined): API.Decoder<unknown, `${Schema}:${string}`, API.Failure>;
export type URIString<Protocol extends `${string}:`> = `${Protocol}${string}`;
import * as API from "@ucanto/interface";
import { Failure } from "../error.js";
//# sourceMappingURL=uri.d.ts.map